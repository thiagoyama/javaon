Video 1
Encare o inesperado com confiança! Neste vídeo, desbravamos o mundo das exceções em Java. Vamos aprender o que são, por que ocorrem, 
e como manejá-las para manter seus programas rodando suave e eficientemente. Acompanhe-me nesta introdução às exceções e torne-se um
 programador mais resiliente e preparado para os desafios do código. É hora de transformar erros em oportunidades de crescimento!
 
 
 
	public static void main(String[] args) {
        double valorDigitado;
        Scanner leitor = new Scanner(System.in);

        System.out.println("Digite um valor numérico");
        try {
            valorDigitado = leitor.nextDouble();
            
        } catch (Exception e){
            System.out.println("Algo errado ocorreu ao tentar armazenar esse valor. Verifique se ele é numérico");
        }
        System.out.println("Finalizando o programa");
    }
}

public static void main(String[] args) {
		double notas[] = new double[3];
        double somaNotas=0;
        int posicao=0;
        Scanner leitor = new Scanner(System.in);
        try {
            for(int i=0;i<notas.length;i++) {
                System.out.println("Digite a nota da " + (i+1) + "º avaliação:");
                notas[i] = leitor.nextDouble();
                somaNotas += notas[i];
            }

            while(posicao!=-1) {
                System.out.println("Digite o número da avaliação para ver a nota, ou -1 para seguir o programa!");
                posicao=leitor.nextInt();
                if (posicao != -1)
                     System.out.println("A nota da " + posicao + "º avaliação é "  + notas[posicao - 1]);
            }

            System.out.println("A média do aluno é " + somaNotas/notas.length);
            leitor.close();
        }catch(InputMismatchException erro) {
            System.out.println("Foi digitado um valor inválido");
        }catch(ArrayIndexOutOfBoundsException erro) {
            System.out.println("O número da avaliação não existe.");
        }
        System.out.println("Finalizando o programa!");
	}


public static void main(String[] args) {
		  double notas[] = new double[3];
        double somaNotas=0;
        int posicao=0;
        Scanner leitor = new Scanner(System.in);
        try {
            for(int i=0;i<notas.length;i++) {
                System.out.println("Digite a nota da " + (i+1) + "º avaliação:");
                notas[i] = leitor.nextDouble();
                somaNotas += notas[i];
            }

            while(posicao!=-1) {
                System.out.println("Digite o número da avaliação para ver a nota, ou -1 para seguir o programa!");
                posicao=leitor.nextInt();
                if (posicao != -1)
                    System.out.println("A nota da " + posicao + "º avaliação é "  + notas[posicao - 1]);
            }

            System.out.println("A média do aluno é " + somaNotas/notas.length);
        }catch(InputMismatchException erro) {
            System.out.println("Foi digitado um valor inválido");
        }catch(ArrayIndexOutOfBoundsException erro) {
            System.out.println("O número da avaliação não existe.");
        } finally {
            leitor.close();
        }
        System.out.println("Finalizando o programa!");
	}



Espero que tenham obtido uma visão clara sobre como esses eventos inesperados podem ser gerenciados e utilizados para fortalecer seus programas.
Lembre-se: entender exceções é essencial para desenvolver software robusto e confiável. 

Video 2
Eleve seu controle de código a um novo patamar! Neste vídeo, vamos aprender a arte de lançar exceptions em Java e como ir além, criando nossas próprias exceptions personalizadas. 

Agora vocês sabem não só como lançar exceptions, mas também como criar suas próprias exceptions personalizadas em Java. 
Esse conhecimento coloca vocês no comando, permitindo que comuniquem e tratem problemas específicos do seu domínio de aplicação com muito mais precisão. 


Video 3
Preparem-se para um verdadeiro teste de habilidades em Java! No vídeo de hoje, vamos colocar em prática tudo o que aprendemos sobre exceptions: como tratá-las, lançá-las e até mesmo criar nossas próprias exceptions personalizadas. Este exercício prático é sua chance de ver como o manejo eficiente de erros pode fazer toda a diferença na qualidade do seu código.

Com isso, finalizamos nosso exercício prático abrangendo o tratamento, lançamento e criação de exceptions personalizadas em Java. Espero que esta sessão tenha ampliado sua visão e habilidade em lidar com as adversidades do código de maneira elegante e profissional. Usem o conhecimento adquirido para escrever programas mais robustos e à prova de falhas. 